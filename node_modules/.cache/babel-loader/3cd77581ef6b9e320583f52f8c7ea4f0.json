{"ast":null,"code":"var _jsxFileName = \"/Users/deepkakadia/Desktop/Deep/Stevens/Sem 2/Web 2/Project-React/src/Components/food/foodMain.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst FoodMain = props => {\n  const [userData, setUserData] = useState(undefined);\n  const [foodData, setFoodData] = useState(undefined);\n  const [foodQuery, setFoodQuery] = useState(\"\"); //const { register, handleSubmit, watch, errors } = useForm()\n  //const onSubmit = data => { console.log(data) }\n  //console.log(watch('example')) // watch input value by passing the name of it\n\n  async function fetchData() {\n    const res = await fetch(\"http://localhost:8000/api/5e938fa88336ab21f4d02126\");\n    res.json().then(res => {\n      console.log(\"response is \" + res);\n      setUserData(res);\n    }).catch(err => console.log(\"error is \" + err));\n  }\n\n  async function postData() {\n    const res = await fetch(\"http://localhost:8000/api\", {\n      method: 'POST',\n      body: JSON.stringify({\n        \"name\": \"Sejal Vyas\",\n        \"username\": \"blackwidow\",\n        \"password\": \"myPassword\"\n      })\n    });\n    res.json().then(res => {\n      console.log(\"response is \" + res);\n      setUserData(res);\n    }).catch(err => console.log(\"error is \" + err));\n  }\n\n  async function getFoodData() {\n    const res = await fetch(\"https://trackapi.nutritionix.com/v2/natural/nutrients\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-app-id': '5a16d255',\n        'x-app-key': 'c6d62bf1fa1b98f09f0bd525d1c94007'\n      },\n      body: JSON.stringify({\n        \"query\": foodQuery\n      })\n    });\n    let response = await res.json();\n    console.log(response);\n    setFoodData(response.foods); //postFoodData(\"5e938f628336ab21f4d02124\", response.foods);\n  }\n\n  async function postFoodData(id, foodArr) {\n    console.log(\"foodData in postFoodData is\");\n    console.log(foodArr);\n    const res = await fetch(\"http://localhost:8000/api/food\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"id\": id,\n        \"foodArr\": foodArr\n      })\n    });\n    let response = await res.json();\n    setUserData(response);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function handleChange(event) {\n    setFoodQuery(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getFoodData();\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"show-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"cap-first-letter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"User id is \", userData && userData.userId), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"dl\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, foodData && foodData.map(food => {\n    return /*#__PURE__*/React.createElement(\"dt\", {\n      key: food.food_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, food.food_name, \" had \", food.nf_calories, \" calories\", /*#__PURE__*/React.createElement(\"img\", {\n      alt: food.food_name,\n      src: food.photo.thumb,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"What did you eat today?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: foodQuery,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default FoodMain;","map":{"version":3,"sources":["/Users/deepkakadia/Desktop/Deep/Stevens/Sem 2/Web 2/Project-React/src/Components/food/foodMain.js"],"names":["React","useState","useEffect","FoodMain","props","userData","setUserData","undefined","foodData","setFoodData","foodQuery","setFoodQuery","fetchData","res","fetch","json","then","console","log","catch","err","postData","method","body","JSON","stringify","getFoodData","headers","response","foods","postFoodData","id","foodArr","handleChange","event","target","value","handleSubmit","preventDefault","userId","map","food","food_name","nf_calories","photo","thumb"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FoodMain = (props) => {\n    const [ userData, setUserData ] = useState(undefined);\n    const [ foodData, setFoodData ] = useState(undefined);\n    const [ foodQuery, setFoodQuery ] = useState(\"\");\n    \n    //const { register, handleSubmit, watch, errors } = useForm()\n    //const onSubmit = data => { console.log(data) }\n\n    //console.log(watch('example')) // watch input value by passing the name of it\n\n    \n    async function fetchData() {\n        const res = await fetch(\"http://localhost:8000/api/5e938fa88336ab21f4d02126\");\n        res\n            .json()\n            .then(res => {\n                console.log(\"response is \" + res);\n                setUserData(res)\n            })\n            .catch(err => console.log(\"error is \" + err));\n    }\n\n    async function postData() {\n        const res = await fetch(\"http://localhost:8000/api\",{\n            method: 'POST',\n            body: JSON.stringify({\n                \"name\":\"Sejal Vyas\",\n                \"username\": \"blackwidow\",\n                \"password\" : \"myPassword\"\n               })\n        });\n        res\n            .json()\n            .then(res => {\n                console.log(\"response is \" + res);\n                setUserData(res)\n            })\n            .catch(err => console.log(\"error is \" + err));\n    }\n\n    async function getFoodData() {\n        const res = await fetch(\"https://trackapi.nutritionix.com/v2/natural/nutrients\",{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-app-id' : '5a16d255',\n                'x-app-key' : 'c6d62bf1fa1b98f09f0bd525d1c94007'\n              },            \n            body: JSON.stringify({\n                \"query\": foodQuery\n            })\n        });\n\n        let response = await res.json();\n        console.log(response);\n        setFoodData(response.foods);\n        //postFoodData(\"5e938f628336ab21f4d02124\", response.foods);\n    }\n\n    async function postFoodData(id, foodArr) {\n        console.log(\"foodData in postFoodData is\");\n        console.log(foodArr);\n        const res = await fetch(\"http://localhost:8000/api/food\",{\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                \"id\": id,\n                \"foodArr\": foodArr\n               })\n        });\n\n        let response = await res.json();\n        setUserData(response);\n    }\n\n\tuseEffect(\n\t\t() => {\n            fetchData();\n\t\t},\n\t\t[]\n\t);\n\n\n    function handleChange(event) {\n        setFoodQuery(event.target.value)\n    }\n\n    function handleSubmit(event) {\n        getFoodData();\n        event.preventDefault();\n    }\n\n\t\n    \n        return (\n            <div className='show-body'>\n                <h1 className='cap-first-letter'></h1>\n                <p>\n                    User id is {userData && userData.userId}\n                </p>\n                <div>\n\n                    <dl className='list-unstyled'>\n                        {foodData &&\n                            foodData.map((food) => {\n                                return (<dt key={food.food_name}>{food.food_name} had {food.nf_calories} calories\n                                    <img alt={food.food_name} src={food.photo.thumb}></img>\n                                </dt>\n                                );\n                        })}\n                    </dl>\n\n                </div>\n                {/*<form onSubmit={handleSubmit(onSubmit)}>\n                    What did you eat today?\n                    <input name=\"example\" defaultValue=\"test\" ref={register} />\n                \n                \n                \n                    <input type=\"submit\" />\n                    </form> */}\n\n                <form onSubmit={handleSubmit}>\n                <label>\n                    What did you eat today?\n                    <br></br>\n                    <input type=\"text\" value={foodQuery} onChange={handleChange} />\n                </label>\n                <br></br>\n                <input type=\"submit\" value=\"Submit\" />\n\n                </form>\n            </div>\n\n        );\n    \n\n};\n\nexport default FoodMain;\n"]},"metadata":{},"sourceType":"module"}